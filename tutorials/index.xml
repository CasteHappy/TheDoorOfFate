<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tutorials on CasteHappy</title>
    <link>https://CasteHappy.github.io/TheDoorOfFate/tutorials/</link>
    <description>Recent content in Tutorials on CasteHappy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Mar 2024 00:39:00 +0200</lastBuildDate><atom:link href="https://CasteHappy.github.io/TheDoorOfFate/tutorials/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fake zoom out transition with SF6 animations</title>
      <link>https://CasteHappy.github.io/TheDoorOfFate/tutorials/fakezoomout/</link>
      <pubDate>Sun, 03 Mar 2024 00:39:00 +0200</pubDate>
      
      <guid>https://CasteHappy.github.io/TheDoorOfFate/tutorials/fakezoomout/</guid>
      <description>I was asked by ytrilogy1091 about how I made this transition from one of the latest videos I&amp;rsquo;ve uploaded to Diaphone&amp;rsquo;s channel:
Your browser does not support the video tag. This is the actual question:
Everything in the foreground I made it myself, I&amp;rsquo;ve already talked about the &amp;ldquo;rank reveal&amp;rdquo; animation in this post.
For the zoom out animation, I just needed 2 files, a still image of the garage door background that appears when choosing characters, and a video of the transition that plays between choosing a stage and going to character select.</description>
      <content:encoded><![CDATA[<p>I was asked by <strong>ytrilogy1091</strong> about how I made this transition from <a href="https://www.youtube.com/watch?v=dmHg8T8IMuw">one of the latest videos I&rsquo;ve uploaded to Diaphone&rsquo;s channel</a>:</p>


<video width=100% controls>
    <source src="transition1.webm" type="video/webm">
    Your browser does not support the video tag.  
</video>

<p>This is the actual question:</p>
<p><img loading="lazy" src="ytcomment.png" alt="comment"  />
</p>
<p>Everything in the foreground I made it myself, I&rsquo;ve already talked about the &ldquo;rank reveal&rdquo; animation <a href="/portfolio/SF6RankUp/">in this post</a>.</p>
<p>For the zoom out animation, I just needed 2 files, a still image of the garage door background that appears when choosing characters, and a video of the transition that plays between choosing a stage and going to character select.</p>
<p>For the screnshot I disabled the HUD and used a free camera mod to get closer to the actual door so I could use it by itself as a transition (closing the door) without having to zoom in and losing quality.</p>
<p><img loading="lazy" src="garagedoor.png" alt="garagedoor"  />
</p>
<p>The video is not modified at all, I only disabled the HUD and just let it play until the characters show up</p>


<video width=100% controls>
    <source src="animation1.webm" type="video/webm">
    Your browser does not support the video tag.  
</video>

<h1 id="step-1-separate-the-2-parts-of-the-animation">Step 1: Separate the 2 parts of the animation</h1>
<p>So the first step is to reverse the video clip so it starts at the garage door, and ends at the long hallway with neon lights.
If you&rsquo;ve noticed, there isn&rsquo;t really a smooth transition from the hallway to the character select garage door, but the in-game graphics hide it really well, and that&rsquo;s kind of the secret of the transtion.</p>
<p>So after reversing the clip, I cut it into 2 different tracks, one for the zoom animation (Track 2), and one for the hallway animation (Track 1).</p>


<table>
  <tr>
    <th>
    <video width=100% controls>
        <source src="step1.webm" type="video/webm">
        Your browser does not support the video tag.  
    </video>
    </th>
  </tr>
  <tr>
    <td colspan="2" style="text-align: center">
    I scaled up the first clip so it exactly matches the size of the screenshot, but it's irrelevant for the effect we want.
    </td>
  </tr>
</table>

<p>The problem here is that the hallway animation always moves at the same speed, so I&rsquo;ll need to fake the movement so it matches the speed of the zoom out of the first clip.</p>
<h1 id="step-2-position-the-clips-correctly">Step 2: Position the clips correctly</h1>
<p>Now I need to align the position of both clips. As you maybe have noticed, the perspective makes it so the end of the first clip and the end of the second one, don&rsquo;t match at all. The scale is also completely off.</p>


<center>
<table>
  <tr>
    <th><img src="perspective.png"</th>
  </tr>
  <tr>
    <td colspan="2" style="text-align: center">
    "X" is the center of the image, the red line is where the floor starts.
    </td>
  </tr>
</table>
</center>

<p>So I&rsquo;m gonna change the position and scale of the clip on track 1, so I get similar looking frames. Doesn&rsquo;t have to perfectly match.</p>


<table>
  <tr>
    <th>
    <video width=100% controls>
        <source src="comparison.webm" type="video/webm">
        Your browser does not support the video tag.  
    </video>
    </th>
  </tr>
  <tr>
    <td colspan="2" style="text-align: center">
    A good visual reference is the size of the neon lights in both frames
    </td>
  </tr>
</table>

<p>So now it&rsquo;s looking like this:


<video width=100% controls>
    <source src="step2.webm" type="video/webm">
    Your browser does not support the video tag.  
</video>
</p>
<h1 id="step-3-the-actual-zoom-out">Step 3: The actual zoom out</h1>
<p>At this point, the last step is to fake the movement of the second clip so it matches the speed of the zoom out animation of the first one.
We can get this done with a simple scale animation.</p>
<p>Right now the scale value of the hallway clip is 300%, I&rsquo;ll add a keyframe at the very first frame (300%), and another one 35 frames later with a value of 113%.
Keyframe velocity is really important here, I&rsquo;ll make it so it starts scaling down really fast, but smoothly stops at the end.</p>


<table>
  <tr>
    <th>
    <video width=100% controls>
        <source src="zoomout1.webm" type="video/webm">
        Your browser does not support the video tag.  
    </video>
    </th>
  </tr>
  <tr>
    <td colspan="2" style="text-align: center">
    Included how the velocity curve looks like just in case it's helpful.
    </td>
  </tr>
</table>

<p>And that&rsquo;s pretty much it, now if you play the full clip it looks pretty convincing.</p>


<video width=100% controls>
    <source src="zoomout2.webm" type="video/webm">
    Your browser does not support the video tag.  
</video>

<p>If it looks off, just play around with the distance between the 2 keyframes and the velocity curves until it looks somewhat seamless.</p>
<h1 id="step-4-hide-in-plain-sight">Step 4: Hide in plain sight</h1>
<p>The only thing left to do now is to <strong>lie</strong> in order to better sell the effect. I added a third track for the still image of the garage door, and animated its opacity so it transitions into the first clip.</p>


<video width=100% controls>
    <source src="step4-1.webm" type="video/webm">
    Your browser does not support the video tag.  
</video>

<p>Then I added a fourth track with an adjustment layer, so I could add a Zoom blur effect that starts and ends at the same time as the actual &ldquo;zoom out&rdquo; we stitched together.</p>


<table>
  <tr>
    <th>
    <video width=100% controls>
        <source src="step4-2.webm" type="video/webm">
        Your browser does not support the video tag.  
    </video>
    </th>
  </tr>
  <tr>
    <td colspan="2" style="text-align: center">
    This zoom effect also hides any imperfection, like the awful quality at the start of the second clip for example. Or any possible misalignments.
    </td>
  </tr>
</table>

<p>And that&rsquo;s the final result, this is how the actual timeline looks like:</p>
<p><img loading="lazy" src="timeline.png" alt="timeline"  />
</p>
<p>As I said at the beginning, this is actually a really simple and common transition that sadly a lot of people overuse and spam at every opportunity they get lol (I used to be guilty of this as well), but this is the actual solution for getting the effect to look smooth and somewhat convincing.</p>
<p>I&rsquo;m not used to making tutorials and English is not my first language so sorry if this was too much, or a bit confusing. Tried to explain it for someone that&rsquo;s a beginner.
Also you can just follow the exact same steps in every editing software if you understand how it works.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Sidechain Compression (Audio Ducking) in Vegas Pro</title>
      <link>https://CasteHappy.github.io/TheDoorOfFate/tutorials/sidechain-compressor-vegas-pro/</link>
      <pubDate>Sun, 27 Aug 2023 22:39:00 +0200</pubDate>
      
      <guid>https://CasteHappy.github.io/TheDoorOfFate/tutorials/sidechain-compressor-vegas-pro/</guid>
      <description>For a month or two I&amp;rsquo;ve been using sidechain compression in most of the vids I&amp;rsquo;ve edited, the result is super satisfying and lets your music choices shine without having to worry about the voiceover getting completely crushed by the songs.
Just in case you don&amp;rsquo;t know what sidechain compression is, just imagine a regular compressor that gets triggered by the signal of another track. So for example, a music track (B) will get compressed only when the voiceover (A) is playing, and when the voiceover is muted, the music won&amp;rsquo;t get compressed at all.</description>
      <content:encoded><![CDATA[<p>For a month or two I&rsquo;ve been using sidechain compression in most of the vids I&rsquo;ve edited, the result is super satisfying and lets your music choices shine without having to worry about the voiceover getting completely crushed by the songs.</p>
<p>Just in case you don&rsquo;t know what sidechain compression is, just imagine a regular compressor that gets triggered by the signal of another track. So for example, a music track (B) will get compressed only when the voiceover (A) is playing, and when the voiceover is muted, the music won&rsquo;t get compressed at all.</p>
<p>After some research I could only find a couple of solutions for Vegas Pro, <a href="https://www.vegascreativesoftware.info/us/forum/sidechain-aka-key-in-compression-impossible--83449/#ca488703"><strong>one that is native to the software</strong></a>, but that I really don&rsquo;t trust / I find too much work for such a simple thing. And another one that requires a plugin called <a href="https://www.db-audioware.com/sidechain-compressor"><strong>Sidechain Compressor V2 by dB Audioware</strong></a>, it&rsquo;s 79 bucks, but you can get it <a href="https://audioz.download/software/win/137876-download_db-audioware-sidechain-compressor-v200-ce-vr.html"><em>by other means</em></a>.</p>
<p>It&rsquo;s very serviceable, but for some reason it won&rsquo;t ever save changes if you close Vegas Pro, so you have to either save the state of the plugin as a preset before closing the program, or just take a screenshot so you remember next time you open the project.</p>
<p>I&rsquo;ve also read that you can do this with a FabFilter plugin, but I haven&rsquo;t figure out how yet, and I&rsquo;m honestly fine with the proccess I use now.</p>
<h2 id="how-to-use-the-compressor">How to use the compressor</h2>
<p>The proccess is very straightforward, just create one track that will be used as the trigger for the compressor (voice track), and at least another track that will affected by it (music track, for example), then go to <strong>View &gt; Window &gt; Mixing Console</strong> or just press <strong>Ctrl+Alt+5</strong> to open the <strong>Mixing Console</strong>.</p>
<p><img loading="lazy" src="/images/mixing_console.png" alt="mixing console 1"  />
</p>
<p><img loading="lazy" src="/images/mixing_console2.png" alt="mixing console 2"  />
</p>
<p>In the Mixing Console, you have to create 2 Buses (A and B) by clicking on <strong>Insert Bus</strong>, and then clicking on the <strong>FX</strong> icon to open the effects list. Search for the Sidechain Compressor V2 plugin and <strong>add it to both buses</strong>.</p>
<p><img loading="lazy" src="/images/mixing_console3.png" alt="mixing console 3"  />
</p>
<p><img loading="lazy" src="/images/mixing_console4.png" alt="mixing console 4"  />
</p>
<p><img loading="lazy" src="/images/mixing_console5.png" alt="mixing console 5"  />
</p>
<p>Before doing anything with the compressor, we need to &ldquo;assign&rdquo; the buses to the different tracks we want for this effect.
<strong>We will assign &ldquo;Bus A&rdquo; to the tracks that will trigger the compressor, and &ldquo;Bus B&rdquo; to the tracks that will be affected by the compressor</strong>. In this example, we want the voiceover in Bus A, and the music in Bus B, you can assign the buses by just clicking in the &ldquo;output&rdquo; option (by default this option will be &ldquo;Master&rdquo;).</p>


<div align="center">
<table>
  <tr>
    <th><img src="/images/mixing_console6.png"</th>
    <th><img src="/images/mixing_console7.png"</th>
  </tr>
</table>
</div>

  
<p>Now, in the compressor, we have to turn on <strong>&ldquo;Universal Sidechain&rdquo;</strong> in both Buses. Then we just have to set Bus A to <strong>&ldquo;Send&rdquo;</strong> and Bus B to <strong>&ldquo;Receive&rdquo;</strong>.</p>


<div align="center">
<table>
  <tr>
    <th><img src="/images/mixing_consoleA.png"</th>
    <th><img src="/images/mixing_consoleB.png"</th>
  </tr>
</table>
</div>
  
<p>And that&rsquo;s basically all there is to it, only thing left is to tweak stuff around <strong>but you only want to modify the compressor in Bus B, the compressor we added to Bus A is just to send the signal to Bus B</strong></p>
<p>I won&rsquo;t explain all the knobs and options in the compressor, you can look everything up in google, there&rsquo;s a lot of information on compressors and what all the settings and options are. I&rsquo;ll just leave you with a quick example of how the final result sounds like.</p>
<p>Parameters I&rsquo;ve changed:</p>
<ul>
<li>Threshold: -26</li>
<li>Ratio: 10:1</li>
<li>Release: 1000ms</li>
</ul>
<audio controls preload="auto">
    <source src="/audio/compressor.wav">
</audio>

<p>This is how it sounds without the compressor:</p>
<audio controls preload="auto">
    <source src="/audio/no-compressor.wav">
</audio>

<p>Obviously the music eats up the voiceover, so we&rsquo;d have to lower the music much more than that.
This way, the music will be too low or too high sometimes unless we manually increase or decrease the levels when we need it, which is a lot more work than using the compressor to do everything for us.</p>
<audio controls preload="auto">
    <source src="/audio/no-compressor-lower.wav">
</audio>

<p>Of course there&rsquo;s a lot more to this and I&rsquo;m still a noob at everything related to audio.</p>
<p>The results will be a lot better using Equalizers and a bunch of other effects, but just by using audio ducking you have a lot more freedom to choose different kind of songs for the project and overall the video will flow a lot better because you won&rsquo;t have to be as careful with the voice track being too loud / quiet.</p>
<p>I hope this helps someone, I&rsquo;ve found a bunch of people mentioning this plugin in a couple of forums but I haven&rsquo;t seen any visual guides for it.</p>
<p>If you have any questions let me know in the comments!</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
